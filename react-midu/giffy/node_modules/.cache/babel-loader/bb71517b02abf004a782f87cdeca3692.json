{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyectos\\\\mas-proyectos-de-react\\\\giffy\\\\src\\\\pages\\\\SearchResult\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Spinner from 'react-bootstrap/Spinner';\nimport getGifs from '../../services/getGifs.js';\nimport '../../componentes/Gif/Gif.css';\nimport './index.css';\nimport ListOfGifs from '../../componentes/ListOfGifs/ListOfGifs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SearchResult(_ref) {\n  _s();\n\n  let {\n    params\n  } = _ref;\n  const {\n    keyword\n  } = params; //Esto se hace ya que si le pedimos el keyword no lo mostraria, por eso en este caso hay q pedirle los params e igualarlo a keywords.\n\n  const [gifs, setGifs] = useState([]);\n  const [loading, setLoading] = useState(false);\n  return loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n    animation: \"border\",\n    variant: \"info\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"visually-hidden\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(ListOfGifs, {\n    gifs: gifs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SearchResult, \"I1APDwvi0Sz4mSlElDeeBSe5xN8=\");\n\n_c = SearchResult;\n\nvar _c;\n\n$RefreshReg$(_c, \"SearchResult\");","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/pages/SearchResult/index.js"],"names":["React","useEffect","useState","Spinner","getGifs","ListOfGifs","SearchResult","params","keyword","gifs","setGifs","loading","setLoading"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAO,+BAAP;AACA,OAAO,aAAP;AACA,OAAOC,UAAP,MAAuB,yCAAvB;;AAEA,eAAe,SAASC,YAAT,OAAmC;AAAA;;AAAA,MAAZ;AAAEC,IAAAA;AAAF,GAAY;AAEhD,QAAM;AAACC,IAAAA;AAAD,MAAYD,MAAlB,CAFgD,CAEtB;;AAC1B,QAAM,CAACE,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC,KAAD,CAAtC;AAEA,SACES,OAAO,gBACL,QAAC,OAAD;AAAS,IAAA,SAAS,EAAC,QAAnB;AAA4B,IAAA,OAAO,EAAC,MAApC;AAAA,2BACE;AAAM,MAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADK,gBAKL,QAAC,UAAD;AAAY,IAAA,IAAI,EAAEF;AAAlB;AAAA;AAAA;AAAA;AAAA,UANJ;AASD;;GAfuBH,Y;;KAAAA,Y","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport getGifs from '../../services/getGifs.js';\r\nimport '../../componentes/Gif/Gif.css';\r\nimport './index.css';\r\nimport ListOfGifs from '../../componentes/ListOfGifs/ListOfGifs';\r\n\r\nexport default function SearchResult ({ params }) {\r\n\r\n  const {keyword} = params; //Esto se hace ya que si le pedimos el keyword no lo mostraria, por eso en este caso hay q pedirle los params e igualarlo a keywords.\r\n  const [gifs, setGifs] = useState([]);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  return (\r\n    loading ? (\r\n      <Spinner animation=\"border\" variant=\"info\" >\r\n        <span className=\"visually-hidden\">Loading...</span>\r\n      </Spinner>\r\n    ) : (\r\n      <ListOfGifs gifs={gifs} />\r\n    )\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}