{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyectos\\\\mas-proyectos-de-react\\\\giffy\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport ListOfGifs from './componentes/ListOfGifs';\nimport getGifs from './services/getGifs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [gifs, setGifs] = useState([]); //Este HOOK nos permite ejecutar una funcion cada vez que se renderice nuestro componente.\n\n  useEffect(function () {\n    getGifs().then(gifs => setGifs(gifs));\n  }, []); //Los corchetes estan para que esta funcion solo se ejecute la primera vez, si no los ponemos, la funcion entraria en un bucle infinito ya que la funcion se ejecutaria cada vez que se renderice el componente, y como estamos llamando al setGifs y actualizando el estado, esto se haria infinitamente.\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"App-content\",\n      children: /*#__PURE__*/_jsxDEV(ListOfGifs, {\n        gifs: gifs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"9au+7fu3XfXLvCqEdMY71MFrLdM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/App.js"],"names":["React","useEffect","useState","ListOfGifs","getGifs","App","gifs","setGifs","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,WAAP;AACA,OAAOC,UAAP,MAAuB,0BAAvB;AACA,OAAOC,OAAP,MAAoB,oBAApB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAFa,CAIb;;AACAD,EAAAA,SAAS,CAAC,YAAW;AACnBG,IAAAA,OAAO,GAAGI,IAAV,CAAeF,IAAI,IAAIC,OAAO,CAACD,IAAD,CAA9B;AACD,GAFQ,EAEN,EAFM,CAAT,CALa,CAOL;;AAER,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAS,MAAA,SAAS,EAAC,aAAnB;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAOD;;GAhBQD,G;;KAAAA,G;AAkBT,eAAeA,GAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport ListOfGifs from './componentes/ListOfGifs';\nimport getGifs from './services/getGifs';\n\nfunction App() {\n\n  const [gifs, setGifs] = useState([])\n\n  //Este HOOK nos permite ejecutar una funcion cada vez que se renderice nuestro componente.\n  useEffect(function() {\n    getGifs().then(gifs => setGifs(gifs))\n  }, [])  //Los corchetes estan para que esta funcion solo se ejecute la primera vez, si no los ponemos, la funcion entraria en un bucle infinito ya que la funcion se ejecutaria cada vez que se renderice el componente, y como estamos llamando al setGifs y actualizando el estado, esto se haria infinitamente.\n\n  return (\n    <div className=\"App\">\n      <section className=\"App-content\">\n        <ListOfGifs gifs={gifs} />\n      </section>\n    </div> \n  )\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}