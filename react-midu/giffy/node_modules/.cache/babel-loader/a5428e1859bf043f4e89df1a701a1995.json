{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyectos\\\\mas-proyectos-de-react\\\\giffy\\\\src\\\\pages\\\\Home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Link, useLocation } from \"wouter\";\nimport { useGifs } from '../../hooks/useGifs';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ListOfGifs from '../../componentes/ListOfGifs/ListOfGifs.js';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n\n  const [keyword, setKeyword] = useState('');\n  /*Este hook devuelve un array de dos posiciones: en la primera pos tendriamos el \r\n  path en donde estamos, y en la segunda posicion le pasamos la navegacion para ir. */\n\n  const [path, pushLocation] = useLocation();\n  const {\n    loading,\n    gifs\n  } = useGifs();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    pushLocation(`/search/${keyword}`); //Navegamos a otra ruta\n  };\n\n  const handleChange = event => {\n    setKeyword(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"app-title\",\n      children: \"Buscador de Gifs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        placeholder: \"Buscar Gif...\",\n        onChange: handleChange,\n        type: \"text\",\n        value: keyword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn-buscar\",\n        children: \"Buscar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n      animation: \"border\",\n      variant: \"info\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"visually-hidden\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ListOfGifs, {\n      gifs: gifs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"ZG8wB7dpJQZtDnGP4I95nj4PBJQ=\", false, function () {\n  return [useLocation, useGifs];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/pages/Home/index.js"],"names":["React","useState","Link","useLocation","useGifs","Spinner","ListOfGifs","Home","keyword","setKeyword","path","pushLocation","loading","gifs","handleSubmit","event","preventDefault","handleChange","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,IAAT,EAAeC,WAAf,QAAiC,QAAjC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAO,aAAP;;;AAEA,eAAe,SAASC,IAAT,GAAe;AAAA;;AAC5B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,CAAC,EAAD,CAAtC;AAEA;AACF;;AACE,QAAM,CAACS,IAAD,EAAOC,YAAP,IAAuBR,WAAW,EAAxC;AACA,QAAM;AAACS,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAkBT,OAAO,EAA/B;;AAEA,QAAMU,YAAY,GAAGC,KAAK,IAAI;AAC5BA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,YAAY,CAAE,WAAUH,OAAQ,EAApB,CAAZ,CAF4B,CAEQ;AACrC,GAHD;;AAKA,QAAMS,YAAY,GAAGF,KAAK,IAAI;AAC5BN,IAAAA,UAAU,CAACM,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEL,YAAjC;AAAA,8BACE;AAAO,QAAA,WAAW,EAAC,eAAnB;AAAmC,QAAA,QAAQ,EAAEG,YAA7C;AAA2D,QAAA,IAAI,EAAC,MAAhE;AAAuE,QAAA,KAAK,EAAET;AAA9E;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAQ,QAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,EAOGI,OAAO,gBACN,QAAC,OAAD;AAAS,MAAA,SAAS,EAAC,QAAnB;AAA4B,MAAA,OAAO,EAAC,MAApC;AAAA,6BACE;AAAM,QAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADM,gBAKJ,QAAC,UAAD;AAAY,MAAA,IAAI,EAAEC;AAAlB;AAAA;AAAA;AAAA;AAAA,YAZN;AAAA,kBADF;AAoBD;;GArCuBN,I;UAKOJ,W,EACLC,O;;;KANFG,I","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link, useLocation} from \"wouter\";\r\nimport { useGifs } from '../../hooks/useGifs';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport ListOfGifs from '../../componentes/ListOfGifs/ListOfGifs.js';\r\nimport './index.css';\r\n\r\nexport default function Home(){\r\n  const [keyword, setKeyword] = useState('')\r\n\r\n  /*Este hook devuelve un array de dos posiciones: en la primera pos tendriamos el \r\n  path en donde estamos, y en la segunda posicion le pasamos la navegacion para ir. */\r\n  const [path, pushLocation] = useLocation();\r\n  const {loading, gifs} = useGifs();\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    pushLocation(`/search/${keyword}`); //Navegamos a otra ruta\r\n  }\r\n\r\n  const handleChange = event => {\r\n    setKeyword(event.target.value); \r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"app-title\">Buscador de Gifs</h3>\r\n      <form className=\"form\" onSubmit={handleSubmit}>\r\n        <input placeholder=\"Buscar Gif...\" onChange={handleChange} type='text' value={keyword} />\r\n        <button className=\"btn-buscar\">Buscar</button>\r\n      </form>\r\n\r\n      {loading ? (\r\n        <Spinner animation=\"border\" variant=\"info\" >\r\n          <span className=\"visually-hidden\">Loading...</span>\r\n        </Spinner>\r\n        ) : (\r\n          <ListOfGifs gifs={gifs} />\r\n        )\r\n      } \r\n\r\n      \r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}