{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyectos\\\\mas-proyectos-de-react\\\\giffy\\\\src\\\\componentes\\\\ListOfGifs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport Gif from './Gif';\nimport getGifs from '../services/getGifs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ListOfGifs() {\n  _s();\n\n  const [gifs, setGifs] = useState([]); //Este HOOK nos permite ejecutar una funcion cada vez que se renderice nuestro componente.\n\n  useEffect(function () {\n    getGifs({\n      keyword: 'programming'\n    }).then(gifs => setGifs(gifs));\n  }, []); //Los corchetes estan para que esta funcion solo se ejecute la primera vez, si no los ponemos, la funcion entraria en un bucle infinito ya que la funcion se ejecutaria cada vez que se renderice el componente, y como estamos llamando al setGifs y actualizando el estado, esto se haria infinitamente.\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: gifs.map(_ref => {\n      let {\n        id,\n        title,\n        url\n      } = _ref;\n      return /*#__PURE__*/_jsxDEV(Gif, {\n        id: id,\n        title: title,\n        url: url //Tambien se podrian pasar las props de la sig manera:\n        // {...singleGif}\n\n      }, id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ListOfGifs, \"9au+7fu3XfXLvCqEdMY71MFrLdM=\");\n\n_c = ListOfGifs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListOfGifs\");","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/componentes/ListOfGifs.js"],"names":["React","useEffect","useState","Gif","getGifs","ListOfGifs","gifs","setGifs","keyword","then","map","id","title","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,OAAP,MAAoB,qBAApB;;AAEA,eAAe,SAASC,UAAT,GAAuB;AAAA;;AAEpC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAFoC,CAIpC;;AACAD,EAAAA,SAAS,CAAC,YAAW;AACnBG,IAAAA,OAAO,CAAC;AAACI,MAAAA,OAAO,EAAE;AAAV,KAAD,CAAP,CAAkCC,IAAlC,CAAuCH,IAAI,IAAIC,OAAO,CAACD,IAAD,CAAtD;AACD,GAFQ,EAEN,EAFM,CAAT,CALoC,CAO5B;;AAGR,sBACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,cAEIA,IAAI,CAACI,GAAL,CAAS;AAAA,UAAC;AAACC,QAAAA,EAAD;AAAKC,QAAAA,KAAL;AAAYC,QAAAA;AAAZ,OAAD;AAAA,0BACP,QAAC,GAAD;AAEE,QAAA,EAAE,EAAEF,EAFN;AAGE,QAAA,KAAK,EAAEC,KAHT;AAIE,QAAA,GAAG,EAAEC,GAJP,CAME;AACA;;AAPF,SACOF,EADP;AAAA;AAAA;AAAA;AAAA,cADO;AAAA,KAAT;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA3BuBN,U;;KAAAA,U","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport Gif from './Gif';\r\nimport getGifs from '../services/getGifs'\r\n\r\nexport default function ListOfGifs () {\r\n\r\n  const [gifs, setGifs] = useState([])\r\n\r\n  //Este HOOK nos permite ejecutar una funcion cada vez que se renderice nuestro componente.\r\n  useEffect(function() {\r\n    getGifs({keyword: 'programming'}).then(gifs => setGifs(gifs))\r\n  }, [])  //Los corchetes estan para que esta funcion solo se ejecute la primera vez, si no los ponemos, la funcion entraria en un bucle infinito ya que la funcion se ejecutaria cada vez que se renderice el componente, y como estamos llamando al setGifs y actualizando el estado, esto se haria infinitamente.\r\n\r\n\r\n  return (\r\n    <section className=\"App-content\">\r\n      {\r\n        gifs.map(({id, title, url}) => \r\n          <Gif \r\n            key={id} \r\n            id={id} \r\n            title={title}\r\n            url={url} \r\n          \r\n            //Tambien se podrian pasar las props de la sig manera:\r\n            // {...singleGif}\r\n          />\r\n        )\r\n      } \r\n    </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}