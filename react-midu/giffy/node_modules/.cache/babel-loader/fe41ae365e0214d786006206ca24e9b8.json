{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyectos\\\\mas-proyectos-de-react\\\\giffy\\\\src\\\\componentes\\\\Gif.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport getGifs from '../services/getGifs'; // const apiURL = 'https://api.giphy.com/v1/gifs/search?api_key=LL4MTSCljL47U8LeX5dYRByVuwAoIefo&q=pand&limit=25&offset=0&rating=g&lang=en';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Gif() {\n  _s();\n\n  const [gifs, setGifs] = useState([]); //Este HOOK nos permite ejecutar una funcion cada vez que se renderice nuestro componente.\n\n  useEffect(function () {\n    getGifs().then(gifs => setGifs(gifs));\n  }, []); //Los corchetes estan para que esta funcion solo se ejecute la primera vez, si no los ponemos, la funcion entraria en un bucle infinito ya que la funcion se ejecutaria cada vez que se renderice el componente, y como estamos llamando al setGifs y actualizando el estado, esto se haria infinitamente.\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"App-content\",\n    children: gifs.map(singleGif => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: singleGif.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: singleGif.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          alt: singleGif.title,\n          src: singleGif.url\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Gif, \"9au+7fu3XfXLvCqEdMY71MFrLdM=\");\n\n_c = Gif;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gif\");","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/componentes/Gif.js"],"names":["React","useState","useEffect","getGifs","Gif","gifs","setGifs","then","map","singleGif","title","id","url"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,OAAP,MAAoB,qBAApB,C,CAEA;;;AAEA,eAAe,SAASC,GAAT,GAAe;AAAA;;AAE5B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC,CAF4B,CAI5B;;AACAC,EAAAA,SAAS,CAAC,YAAW;AACnBC,IAAAA,OAAO,GAAGI,IAAV,CAAeF,IAAI,IAAIC,OAAO,CAACD,IAAD,CAA9B;AACD,GAFQ,EAEN,EAFM,CAAT,CAL4B,CAOpB;;AAER,sBACE;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA,cAEMA,IAAI,CAACG,GAAL,CAASC,SAAS,IAAI;AACpB,0BACE;AAAA,gCACE;AAAA,oBAAKA,SAAS,CAACC;AAAf;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAQD,SAAS,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,GAAG,EAAEF,SAAS,CAACC,KAApB;AAA2B,UAAA,GAAG,EAAED,SAAS,CAACG;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAOD,KARD;AAFN;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GAxBuBR,G;;KAAAA,G","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport getGifs from '../services/getGifs';\r\n\r\n// const apiURL = 'https://api.giphy.com/v1/gifs/search?api_key=LL4MTSCljL47U8LeX5dYRByVuwAoIefo&q=pand&limit=25&offset=0&rating=g&lang=en';\r\n\r\nexport default function Gif() {\r\n\r\n  const [gifs, setGifs] = useState([])\r\n\r\n  //Este HOOK nos permite ejecutar una funcion cada vez que se renderice nuestro componente.\r\n  useEffect(function() {\r\n    getGifs().then(gifs => setGifs(gifs))\r\n  }, [])  //Los corchetes estan para que esta funcion solo se ejecute la primera vez, si no los ponemos, la funcion entraria en un bucle infinito ya que la funcion se ejecutaria cada vez que se renderice el componente, y como estamos llamando al setGifs y actualizando el estado, esto se haria infinitamente.\r\n\r\n  return (\r\n    <section className=\"App-content\">\r\n        {\r\n          gifs.map(singleGif => {\r\n            return (\r\n              <div>\r\n                <h4>{singleGif.title}</h4>\r\n                <small>{singleGif.id}</small>\r\n                <img alt={singleGif.title} src={singleGif.url} />\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </section>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}