{"ast":null,"code":"import { API_KEY, API_URL } from \"./settings.js\";\n/*Esa sintaxis de prop es: Si no le mandamos nada desde la llamada kayword = 'panda,\r\ny si ni si quiera declaramos keyword en la llamada, que ademas este preparado para\r\nrecibir un prop vacio, entonces son dos valores por defecto al mismo tiempo. */\n\nexport default function getGifs() {\n  let {\n    keyword = 'panda'\n  } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const apiURL = `${API_URL}/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=25&offset=0&rating=g&lang=en`;\n  return fetch(apiURL).then(res => res.json()).then(response => {\n    /*Estos datos lo sacamos yendo a la url. Entonces como en este caso quiero \r\n    obtener las imagenes accedemos a data->images->downsized_medium->url, y \r\n    ahi con map retornamos todos las url. */\n    const {\n      data = []\n    } = response;\n\n    if (Array.isArray(data)) {\n      const gifs = data.map(image => {\n        const {\n          images,\n          title,\n          id\n        } = image;\n        const {\n          url\n        } = images.downsized_medium;\n        return {\n          title,\n          id,\n          url\n        };\n      });\n      return gifs;\n    }\n  });\n}","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/services/getGifs.js"],"names":["API_KEY","API_URL","getGifs","keyword","apiURL","fetch","then","res","json","response","data","Array","isArray","gifs","map","image","images","title","id","url","downsized_medium"],"mappings":"AAAA,SAAQA,OAAR,EAAiBC,OAAjB,QAA+B,eAA/B;AAEA;AACA;AACA;;AACA,eAAe,SAASC,OAAT,GAAgD;AAAA,MAA9B;AAACC,IAAAA,OAAO,GAAG;AAAX,GAA8B,uEAAP,EAAO;AAE7D,QAAMC,MAAM,GAAI,GAAEH,OAAQ,wBAAuBD,OAAQ,MAAKG,OAAQ,qCAAtE;AAEA,SAAOE,KAAK,CAACD,MAAD,CAAL,CACJE,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAEJF,IAFI,CAECG,QAAQ,IAAI;AAElB;AACJ;AACA;AACI,UAAM;AAACC,MAAAA,IAAI,GAAG;AAAR,QAAcD,QAApB;;AACA,QAAGE,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAH,EAAuB;AACrB,YAAMG,IAAI,GAAGH,IAAI,CAACI,GAAL,CAASC,KAAK,IAAI;AAC7B,cAAM;AAACC,UAAAA,MAAD;AAASC,UAAAA,KAAT;AAAgBC,UAAAA;AAAhB,YAAsBH,KAA5B;AACA,cAAM;AAACI,UAAAA;AAAD,YAAQH,MAAM,CAACI,gBAArB;AACA,eAAO;AAACH,UAAAA,KAAD;AAAQC,UAAAA,EAAR;AAAYC,UAAAA;AAAZ,SAAP;AACD,OAJY,CAAb;AAKA,aAAON,IAAP;AACD;AACF,GAhBM,CAAP;AAiBD","sourcesContent":["import {API_KEY, API_URL} from \"./settings.js\";\r\n\r\n/*Esa sintaxis de prop es: Si no le mandamos nada desde la llamada kayword = 'panda,\r\ny si ni si quiera declaramos keyword en la llamada, que ademas este preparado para\r\nrecibir un prop vacio, entonces son dos valores por defecto al mismo tiempo. */\r\nexport default function getGifs( {keyword = 'panda'} =  {},  ) {\r\n\r\n  const apiURL = `${API_URL}/gifs/search?api_key=${API_KEY}&q=${keyword}&limit=25&offset=0&rating=g&lang=en`;\r\n\r\n  return fetch(apiURL)\r\n    .then(res => res.json())\r\n    .then(response => {\r\n\r\n    /*Estos datos lo sacamos yendo a la url. Entonces como en este caso quiero \r\n    obtener las imagenes accedemos a data->images->downsized_medium->url, y \r\n    ahi con map retornamos todos las url. */\r\n    const {data = []} = response;\r\n    if(Array.isArray(data)){\r\n      const gifs = data.map(image => { \r\n        const {images, title, id} = image;\r\n        const {url} = images.downsized_medium;\r\n        return {title, id, url}\r\n      })\r\n      return gifs;  \r\n    }\r\n  })\r\n}"]},"metadata":{},"sourceType":"module"}