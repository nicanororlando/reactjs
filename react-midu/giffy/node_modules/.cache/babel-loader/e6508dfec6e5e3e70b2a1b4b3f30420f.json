{"ast":null,"code":"var _jsxFileName = \"H:\\\\Proyectos\\\\mas-proyectos-de-react\\\\giffy\\\\src\\\\pages\\\\Home\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useGifs } from '../../hooks/useGifs';\nimport Spinner from 'react-bootstrap/Spinner';\nimport ListOfGifs from '../../componentes/ListOfGifs/ListOfGifs.js';\nimport TrendingSearches from \"../../componentes/TrendingSearches/TrendingSearches\";\nimport SearchForm from \"../../componentes/SearchForm/SearchForm\";\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Home(_ref) {\n  _s();\n\n  let {\n    params\n  } = _ref;\n  const {\n    keyword\n  } = params; //Esto se hace ya que si le pedimos el keyword no lo mostraria, por eso en este caso hay q pedirle los params e igualarlo a keywords.\n\n  const {\n    loading,\n    gifs\n  } = useGifs();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SearchForm, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Container\",\n      children: [loading ? /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"border\",\n        variant: \"info\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"visually-hidden\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Container-gifs\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"Search-title\",\n          children: keyword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(ListOfGifs, {\n          gifs: gifs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App-category\",\n        children: /*#__PURE__*/_jsxDEV(TrendingSearches, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Home, \"fTsCKf9QPTOHjFKSR7NbaREKe3g=\", false, function () {\n  return [useGifs];\n});\n\n_c = Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["H:/Proyectos/mas-proyectos-de-react/giffy/src/pages/Home/index.js"],"names":["React","useState","useGifs","Spinner","ListOfGifs","TrendingSearches","SearchForm","Home","params","keyword","loading","gifs"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,UAAP,MAAuB,4CAAvB;AACA,OAAOC,gBAAP,MAA6B,qDAA7B;AACA,OAAOC,UAAP,MAAuB,yCAAvB;AACA,OAAO,aAAP;;;AAEA,eAAe,SAASC,IAAT,OAAuB;AAAA;;AAAA,MAAT;AAACC,IAAAA;AAAD,GAAS;AAEpC,QAAM;AAAEC,IAAAA;AAAF,MAAcD,MAApB,CAFoC,CAER;;AAC5B,QAAM;AAACE,IAAAA,OAAD;AAAUC,IAAAA;AAAV,MAAkBT,OAAO,EAA/B;AAEA,sBACE;AAAA,4BACE,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACGQ,OAAO,gBACN,QAAC,OAAD;AAAS,QAAA,SAAS,EAAC,QAAnB;AAA4B,QAAA,OAAO,EAAC,MAApC;AAAA,+BACE;AAAM,UAAA,SAAS,EAAC,iBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADM,gBAKJ;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8BD;AAA9B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,UAAD;AAAY,UAAA,IAAI,EAAEE;AAAlB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cANN,eAYE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAqBD;;GA1BuBJ,I;UAGEL,O;;;KAHFK,I","sourcesContent":["import React, { useState } from \"react\";\r\nimport { useGifs } from '../../hooks/useGifs';\r\nimport Spinner from 'react-bootstrap/Spinner'\r\nimport ListOfGifs from '../../componentes/ListOfGifs/ListOfGifs.js';\r\nimport TrendingSearches from \"../../componentes/TrendingSearches/TrendingSearches\";\r\nimport SearchForm from \"../../componentes/SearchForm/SearchForm\";\r\nimport './index.css';\r\n\r\nexport default function Home({params}){\r\n\r\n  const { keyword } = params; //Esto se hace ya que si le pedimos el keyword no lo mostraria, por eso en este caso hay q pedirle los params e igualarlo a keywords.\r\n  const {loading, gifs} = useGifs();\r\n\r\n  return (\r\n    <>  \r\n      <SearchForm />\r\n      <div className=\"Container\">\r\n        {loading ? (\r\n          <Spinner animation=\"border\" variant=\"info\" >\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n          </Spinner>\r\n          ) : (\r\n            <div className='Container-gifs'>\r\n              <h3 className='Search-title'>{keyword}</h3>\r\n              <ListOfGifs gifs={gifs} />\r\n            </div>\r\n          )\r\n        } \r\n        <div className=\"App-category\">\r\n          <TrendingSearches />\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}